@using System.Reflection
@{
    var version = GetType().Assembly.GetCustomAttribute<AssemblyInformationalVersionAttribute>()?.InformationalVersion;
    version = version == null ? string.Empty : $"v{version}";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"]</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.7/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-LN+7fdVzj6u52u30Kp6M/trliBMCMKTyK833zpbD+pXdCLuTusPj697FH4R/5mcr" crossorigin="anonymous">
    <link href="/_content/GetaOptimizelySitemaps/css/dashboard.css" rel="stylesheet">
</head>
<body>
<header class="navbar navbar-dark sticky-top bg-dark flex-md-nowrap p-0 shadow">
    <a class="navbar-brand col-md-3 col-lg-2 me-0 px-3" href="">SEO Sitemaps <span class="version">@version</span></a>
    <div class="ml-auto mb-1 px-3">
        <span class="geta-logo-prefix">by</span> @{ await Html.RenderPartialAsync("Shared/_Logo"); }
    </div>
</header>
<div class="container-fluid">
    <div class="row">
        <main class="col-md-9 col-lg-10 px-md-4 gy-3">
            @RenderBody()
        </main>
        <aside class="col-md-3 col-lg-2 px-md-4 gy-3 text-break">
            <div class="mb-3 fw-bold">List of sitemap configurations</div>
            <div class="mb-3">
                <div>
                    <span class="fw-bold">Host:</span>
                    The host name to access the sitemap
                </div>
                <div>
                    <span class="fw-bold">Include alternate languages:</span>
                    If your site targets users in many languages and you can provide Google with rel="alternate" hreflang="x". These attributes help Google serve the correct language or regional URL to searchers.
                </div>
                <div>
                    <span class="fw-bold">Paths to include:</span>
                    Include only pages whose URL starts with one of the given values.
                    Separate multiple values with a semicolon (e.g., /en/blog;/en/guides).
                    If left empty, no filtering will be applied.
                </div>
                <div>
                    <span class="fw-bold">Paths to avoid:</span>
                    Exclude pages whose URL starts with one of the given values.
                    Separate multiple values with a semicolon (e.g., /en/locations;/en/destinations).
                    If left empty, no filtering will be applied.
                </div>
                <div>
                    <span class="fw-bold">Root page ID:</span>
                    Sitemap will contain entries for descendant pages of the specified page (-1 means root page).
                </div>
                <div>
                    <span class="fw-bold">Debug info:</span>
                    Check this to include data about each page entry as an xml comment
                </div>
                <div>
                    <span class="fw-bold">Format:</span>
                    Standard/Mobile/Commerce/Standard and commere
                </div>
            </div>
            <div class="mb-3">
                <span class="fw-bold">NB!</span> To generate the actual sitemaps please run the scheduled task "Generate xml sitemaps".
            </div>
        </aside>
    </div>
</div>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.7/dist/js/bootstrap.bundle.min.js" integrity="sha384-ndDqU0Gzau9qJ1lfW4pNLlhNTkCfHzAVBReH9diLvGRem5+R9g2FzA8ZGN954O5Q" crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/feather-icons@4.29.2/dist/feather.min.js" integrity="sha256-6kZaxraaA33En9pqscWF+VclCR7/RRXfYduR2dPF5U4=" crossorigin="anonymous"></script>
<script src="/_content/GetaOptimizelySitemaps/js/dashboard.js"></script>
@await RenderSectionAsync("Scripts", required: false)
</body>
</html>